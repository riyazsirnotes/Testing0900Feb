Feb 20th - Monday 

Manual Testing 

Software : set of instructions or programs to accomplish some task

e.g : calculator , whatsapp etc ..

Types of Softwares:

1 . System Software :

e.g - Operating System , drivers etc..

2. Programming Software : 

e.g : compiler , interpreters , debugging tools etc ..


3. Applictaion Softwares:

e.g : Web Applictaions , mobile apps , mainframe apps , silverlite apps , SAP apps


Testing:

It's a process of checking developed software is working as per client business requirments
or not

-> to find defects or bugs

- > primary motto of testing is to deliver a quality and a risk free product



what to test in now-a-days applications (web or mobile ) ?

- Funcationalities 
- GUI(graphical user interafce)
- Load Testing
- Performance Testing
- Security Testing
- Usability 

how to test ?

1. Manual Testing

Testing activity carried out for testing software applications using Man effort 
Then it is called Manual Testing

2.Automation Testing :

Testing activity carried out for testing software applications using 
some tools or programs .

Then it is called Automation Testing


Automation :

The process of converting Test Cases into Test Script using some tools


Terminilogies in Software development or testing :

Product : 

if a software application developed for multiple users 



Project : 

if a software application developed for a speicific or single user or organization 


********************************************************
Feb 21st - Tuesday

 Terminilogies in Software development or testing  (Cont ...)
 
 
 - Error 
 
 Any incorrect human action or mistakes which gives wrong results
 
 - Defect / Bug / Fault / Issue :
 
 Deviation between expected Behaviout to Actual Behaviour of the system is called Defect.
 
 
 - Failure / Incident :
 
 If an end user identifies a defect while using software application
 Then it is called Failure.
 
 
 Note : 
 
 presence of errors results in Defects and Presence of defects will results in Failure
 
 
 
 why do a software application have defects ?
 
 
 1) Incorrect requirments
 2) Wrong Design
 3) Wrong Coding 
 4) poor Coding
 5) complex architecture
 6) work pressure or time pressure
 7) frequently changing business requirments
 
 
 
********************************************************
Feb 23rd  - Thursday


Now-a-days TEsting :

It's a process of checking are we developing  right software and also checking developed software
working as per client business requirements or not


Software Testing = Verifaction + Validation 

Verifictaion : It is process of checking are we developing right software or not

It is also called as Static Testing

Validation :It is process of checking developed  software is working as per client requirement or not


It is also called as Dynamic Testing


-------------------------------------------------------

what are roles and duties of tester ?

1)Understanding application under Test (AUT)

2)Formal Testing ( writing and executing test cases)

3)Adhoc Testing or Informal (NO TEst Cases)

4) Finding defects and report to developers

5) Retesting and Regression Testing

6) Developing automation test scripts

7) executing automation test scripts

8) Analyse Test Reports

9) Prepare Test Report 



********************************************************
Feb 24th  - Friday

Software Testing Principles :

1. Exhaustive Testing is impossible

If we test a functionality with all possible valid inputs and Invalid inputs 
then it is called exhaustive testing.

In simple words , testing everything is called exhaustive testing.

If we check login with all registered users then it is called exhaustive testing.
which is practically impossible.

Instead of validating all user , we choose few from each category and then validate.

2. Defect Clustering :

sometimes a small functionality may produce more number of defects when compared to bigger functionality

for e.g , Registration functionality might have many field in it's page 
compare to payment gateway page .

but there will be complex business logic runs behind payement gateway page.

so here we need to put more effort on Payment gateway page compared to registration page.


3. Pesticide Paradox 

If prepared test cases are not able to find defects.
Then add more test cases or modify test cases if required for better testing 


4. Early Testing

Conducting testing as soon as possible in the development life cycle .


Testing right from requirements phase is called Early Testing.

5. Testing is application dependent / situation dependent :

TEst approach may slightly vary from project to project.

for e.g : Testing a calculator application is different from testing shopping application

As calculator application is a desktop application , there is no need of Load or Performance testing


Testing is situation dependent.

sometimes test approach may slightly change based on time availabilty , resource availabilty and cost.

i.e if sufficient time availabilty you will go for both Formal and Informal testing
otherwise only Formal Testing


6. Testing should show presence of defects 

Always testing should be carried out with an intention of finding defects .

We have to find defects before customer find them.

This can be achived by doing negative testing .


7. Absence of defects is a fallacy 


8919146429


********************************************************
Feb 27th  - Monday 


Software Developement Life Cycle (SDLC) :



SDLC Models :


A SDLC model will explain how various development activities implemented in a project.

SDLC Models are classified in two types

									SDLC
									
			Sequential Models						Incremental Models
			
			1. Waterfall Model						1. RAD (Rapid Application Developement)
			2. V-Model							    2. Protype Model
													3. Spiral Model
													4. Agile Model

1. Waterfall Model	

Waterfall model is well suited for developing small size projects where requirements are very clear

2. V-Model

V-Model model is well suited for developing small size projects 
where requirements are not clear




1. RAD Model :

RAD  model is suitable for big projects which to be completed in short span of time.

2. Prototype Model :

Protoype model is best suited for developing big size projects , we opt thisfor the following two
scenarios.

i. if customer providing a reference application
ii. If customer requirements are not clear


3. Spiral Model 



********************************************************
Feb 28th  - Tuesday


SoftWare Testing = Verification + Validation

Static Testing :

It's a process of chekcing are we developing right software or not
It's carried out in organization through reviews

Review :

Examing a project related task is a review.

Requirement Reviews :

Reviews carried out by domain experts to find mistakes at requirment phase 
 
Design Reviews : 

Reviews carried out by system  experts to find mistakes in Design

Code Reviews :

These reviews are carried out by senior developers to find any deviations in coding standards

Test Cases Reviews :

These review are carried out by senior testers preferably Test leads to check the test cases are
enough to test the project.


Formal Reviews :

If any review activity carried out by following proper review procedures or guidelines .


Inspection and Audit are the best examples for Formal Reviews.

Inspection : if a formal review carried out while executing a task

Audit : if a formal review carried out after execution of task

Peer reviews : reviews done within peers

Walk Through's:

Knowledge Transfer sesions conducted 

-----------------------------------------------------
Dynamic Testing 


White Box Testing :

Testing conducted on the source code by developers to make sure developed code is working as expected


Unit Testing :

A smallest part in source code of application such as programs, functions etc  are called units

Testing conducted on this units is called Unit Testing


Integration Testing :

once all units are tested ,  programs are combined together.

Testing conducted on overall output is called Integration Testing.

Black BOx Testing :

Once Integration testing is done , the source is coverted to executable format 
called Build or exe file and deployed into system.

Testing conducted on System or developed applictaion is called Black box testing.


--------------------------------------------------

Functional System Testing Types :

1) Smoke Testing :

It is a kind of quick test or rough test performed on given application or build to decide
whether it is eligible for further detailed testing or not


what to be verified in smoke Testing ?

- we have to check all major functionalities are available ?
- we have to check the given application is consistently operable or not 


Objective of smoke testing is to make sure whether given application is testable or not
- not to find defects



********************************************************
Mar 1st  - Wednesday

Functional System Testing Types :(Cont ...)

2) Formal Testing :


If we test a s/w application by following proper procedures and proper documentation.

In simple words , writing test cases and executing test cases.

suitable or recommended for maintenance projects.


3)Adhoc Testing :


If we test a s/w application by without following proper procedures and proper documentation(NO Test cases).

- It is recommended for small or quick projects.
- it is recommended for maintenance projects after formal testing 

4) Priority Based Testing :

It is a process of deciding what to be tested first , what to test next and what to test last.

In other words , identifying important features in the product and testing them in order.

5) ReTesting :

It is a process of validating reported defects/bugs are correctly resolved or not in modified  build.

6) Regression Testing :

It is a process of validating various functionalities in the modified build , where there is 
a chance of getting side effects.

7)Sanity Testing :

It is a process of validtaing functionalities depends on bug found in production .
basically , Sanity testing is subset of regression  


8)End to End Testing :

It is process of checking overall functionalities of the system from begining to end.

This will be carried out by seniors testers preferably teste lead to make decission whether to stop
testing or not .


Special Functional System Testing :

1. Bench Mark Testing :

It is a process of comparing our product with an established product in market.


2. Exploratory Testing :

Exploratoring the applictaion , understanding the applictaion then testing it.

in two scenarios , we go for exploratory testing

- if requirement documentation is not availabile

- if requirements documentation is not providing sufficient inputs 

3. Monkey Testing :

Wantedly performing uneven operations or zig-zag operations with an intension of
making system failure is called monkey testing .

-----------------------------------------------------------------

Non Functional Testing :

Testing performed to check reponsiveness , stability and security etc aspects are 
called Non Functional testing .

WE check following paramters:


time

speed 

user data volume 


1. Performance Testing :

		Load Testing
		Stress Testing
		Volume Testing 
		
these testing are done using tools 

jmeter ,load runner , neo load etc ...

Performance Testing :

testing the response time of application under different conditions 

Load TEsting :

testing the stability of the system under different loads .

we increase the load gradually and test the s/m

Stress Testing :

Suddenly increasing the load and checking stability

Volume Testing :

Here we test the user data volume capacity that s/m can hold

Security Testing :

Testing the security aspects .



********************************************************
Mar 2nd  - Thursday

Globalization or Internationalization or I18N testing :

It is a process of checking end user having a choice to configure different language options

(currency  ,date and time format )

Localization Testing :

It's a process of chekcing default format , currancy or language for the product designed for 
a specific locality of users.



Recovery Testing :

It's a process of checking how does our application handling unexpected or unpredictable 
situation's like power failure ,system crash , internet issues etc ..


Installation Testing :

It's a process of checking are we able to install the software successfully or not 
as per guidelines given in installation document.


UnInstallation Testing :

It's a process of checking are we able to uninstall the s/w successfully or not

also the data clean up.


----------------------------------------------------------

User Acceptance Testing :

Testing carried out by the end user on the delivered product to make sure whether is ready for production.

UAT testing carried out in two ways :

1. Aplha Testing :

It is first level of Acceptance testing carried out within company premises.

2. Beta Testing :


It is last level of Acceptance testing carried out at customer premises

-----------------------------------------------------------------------------

Module 2

Software Testing Project :


Test Planning :

It is the first phase of s/w testing where management defines the test strategy and Test plan to 
execute the work smootly.

Test Strategy :

It is a high level plan and approach defined by management that explains how current project will be tested.


In general , test strategy will be defined by Project Manager or Test MAnager.

TEst Plan :

It is a detailed work plan that explains 

	-> scope of testing 
	-> test approach
	-> resources
	-> work schedules 
	
	
	
Test Plan consists of following sections

1)Project Overview

2)Document References 

3) Scope of testing :

	3.1 In Scope (features to be tested)
	3.2 Out Scope (features not to be tested or NFT non Functional Testing or NFR )
	
4) Test Strategy

5) Test Environment

6) Test Deliverable 

7) Staffing Plan 

8) Risk Planing 

9) Work Schdueles

10)Approvals / sign offs



********************************************************
Mar 3rd  - Friday

https://demo.guru99.com/v4/

Access details to demo site.
User ID :	mngr266311
Password :	Admin123$



********************************************************
Mar 6th  - Monday

Test Deisgn Phase :

Test Scenario :

a feature / behaviour / functionality that to be tested in AUT (application under test)

what to test ?


Few Scenario's for Calculator Application :

1. check addition
2. check subraction
3. check multiplcation
4. check division
5. check sqaure 
etc ..


Few Scenario's for Mobile device :

1. check switch on/offs
2. check secutity ( face id or finger pin or pin)
3. check sim card compatability
4. check battery
5. check volume 
6. check call out going
7. check call incoming 
8. check SMS sending
9. check SMS recieving 

etc...


Test Case :

How to test ?

to test  a functionality  under different conditions

?????????????????????????????????????????????????

Assignment 

1. Write Test Scenario's for Naukri registration

use the Test Scenario template shared with you in github


********************************************************
Mar 7th  - Tuesday

Test Deisgn Phase :

Test Case :

A set of pre-conditions , test procedures , input data (test data) and expected behaviour
of the system planned by tester to validate a functionality/feature in Project or AUT 
is called Test Case .

In simple words ,

how to test a Test Scenario is nothing but Test Case 


????????????????????????????????????????????????????????
Assignment :

Completed the Test Case Write up for Adactin Hotel Application
and

Also complete the Test case write up for Naukri Registration functionality


???????????????????????????????????????????????????????


Test Case Design Techniques :


To avoid exhaustive testing and to ensure 100 % requirement coverage
and to finf defects and also to reduce test cases count we follow techniques for S/W testing

1)Equivalnce Class Partioning (ECP)
2)Boundary Value Analysis (BVA)
3)Decission Table Testing
4)State Transition Testing 
5) Use Case Based Testing 
6) Error guessing


********************************************************
Mar 8th  - Wednesday

1)Equivalnce Class Partioning (ECP)

It is one of the test case design techniques which helps us to reduce or minimize the count of test cases.

according to ECP , identify all possible i/p conditions to validate functionality then4
divide them into groups . while making a group make sure that all i/p's that belongs to that group
is producing same logical o/p. 
Then consider , atlease one input from each group preferably middle value for testing .



2)Boundary Value Analysis (BVA)

This technique also useful for minimizing the count of Test cases.

It has practically proven that most of the developers making mistakes while specifying boundary conditions
such as greater than  , less than , > = , <= .


According to BVA, we have to identify the partitions  where there are ranges , then we  have to consider 
lower boundary value , upper boundary value , LBV-1 , UBV + 1  for testing .


??????????????????????????????????

Assignment

-------------------------------------------
S.No   |  Amount          | Service Charge |
--------------------------------------------
 1     | 1000-10,000      |    10          |
 2     | 10,001 - 50,000  |    20          |
 3     | 50,001 - 1,00,000|    30          |
--------------------------------------------

if amount is < 1000 or > 1,00,000 Transfer can't happen


3)Decission Table Testing

If the output of a functionality depends on mulitple inputs definitely developer will use 
logical operators such as AND , OR , etc in source code..

There is chance , in place of AND operators by mistake he might have OR operator which may result in 
deviations or defects.

In this case , we use decission table testing to find out those kind of defects.

???????????????????????????????????

New Customer    25%      15%

Existing Cutomer 10 %     15%


here 3 i/p New customer , Old customer ,coupon 

o/p discount

??????????????????????????????????????????????????


********************************************************
Mar 9th  - Thursday


4)State Transition Testing  or Navigation Testing 

A software application will navigate from one page to another page based on input data and based on user actions


State Transition testing is a process of checking does the system is navigating properly or not for various user actions 


5) Use Case Based Testing :

Use Case : describes the requirment

Actor : which is the user , which can be single user or group of people interacting with process.

Action : which is to reach final outcome .

Goal /Outcome :  which is the successful user outcome.


Three flows :

-> Basic Flow

-> Alternate Flow

-> Exception Flow


6) Error guessing

It is a kind of Experiences based Test Design Techniques

Here tester based on his previous experience will write some Test cases 
which can give some exceptional errors 

------------------------------------------
Requirement Tracability Matrix 

Mapping the requirements to Test Cases using a Matrix or table is called RTM

Here ,  We have requirements . For Each requirement we will have Use cases 

using use Case we will derive test scenarios and which we will test cases.


----------------------------------------------
Test Case Summary report


====================================================================================

Test Execution Phase :




********************************************************
Mar 10th  - Friday

Test Execution Phase :

In this phase we execute planned test cases on the given build.

The following are the major work iteams carried out in this pahse.

1. Build Deployment

2. Build Acceptance Testing (Smoke Testing)

3. Executing test cases (Formal Testing)

4. Documenting and reporting defects

5. Conduct retesting on the modified build 

6. Conducting regression testing on modified build

7. Conducting end-to-end testing on Final build


1. Build Deployment :


Once code developed and tested (WBT) by developers.
This source code is compiled into excutable application called build .

in Web apps : 

you will be given a URL (where build is deployed)

e.g :  www.testa.amazon.com
       www.qa1.jpmc.com
	   
In Mobile apps :

Android :

you will be given .apk file or the path where .apk exists in App Center

iOS:

you will be given .ipa file or the path where .ipa exists in App Center



for every build developer will share below 2 documents

i) SRN (SoftWare Release Notes)

a) Dev team information
b) Testing team information
c) build path ( can be URL or app center link witj build number)
d) known issues
e) Regression testing scenarios  if applicable
f) Approvals



ii) DD (Deployment Document)

This document will explain hardware requirements , software requirements procedures.

2. Build Acceptance Testing (Smoke Testing) :


After deploying the build we will perform smoke testing to make sure given application
is testable or not ( means for further detailed testing)

if not testable , we will reject the build.

Note : here we are not raising defects.


3. Executing test cases (Formal Testing)

If smoke testing passes , we will start executing test based on priority.

P0 - Very High
P1 - High
P2 - Medium
P3 - Low

While excuting test steps we should update Actual results then compare with expected results.

if both are matched , we update step result as passed.


one test case contains many steps , if all steps are passed ,then we update in Test Case Summary report ,
test case is passed.


Defect / Bug / Issue :


1. Reproducible Defect :


if a defect occuring every time then it is called reproducible defect.



2. Defect Severity :

The impact of the defect or how serious the defect is 

1.Very high /  Critical
2. High    /Major
3. Medium / Medium
4. Low / Minor

Note : Defect severity is decided by testers beacuse testers know the business requirements well

and also domain knowledge


3. Defect Priority :


the order in which defect to be resolved .

1.Very high /  P0
2. High    / P1
3. Medium / P2
4. Low / P3

Note : Defect priority is decided by developer as he know better which one takes more time or less for fixing.


????????????????????????????????????????????

Assignment

http://adactinhotelapp.com/resources/KnownDefects_HotelApp.pdf

raise atleast 5 defects using our Defect Template 


?????????????????????????????????????????????



********************************************************
Mar 11th  - Saturday
********************************************************

Bug Life Cycle or Defect Life Cycle

+++++++++++++++++++++++++++++
Module 3

Agile & JIRA

++++++++++++++++++++++++++++++

Agile  Model / Agile Process / Agile Methodology

It is an interative and incremental Model or approach






















































	   
	   





























































